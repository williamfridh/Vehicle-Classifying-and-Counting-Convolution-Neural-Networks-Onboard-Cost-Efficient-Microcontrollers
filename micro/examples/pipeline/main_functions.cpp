/* Copyright 2022 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#include <vector>
#include <iostream>
#include "pico/stdlib.h"

#include "constants.h"
#include "pipeline_float_model_data.h"
#include "main_functions.h"
#include "tensorflow/lite/micro/micro_interpreter.h"
#include "tensorflow/lite/micro/micro_log.h"
#include "tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "tensorflow/lite/micro/system_setup.h"
#include "tensorflow/lite/schema/schema_generated.h"

#include <librosa/librosa.h>
#include "make-mfcc.h"






// Globals, used for compatibility with Arduino-style sketches.
namespace {
  const int NUM_MFCC = 16;
  const int NUM_MEL_BANDS = 32;
  const int SAMPLE_RATE = 16000;
  const tflite::Model* model = nullptr;
  tflite::MicroInterpreter* interpreter = nullptr;
  TfLiteTensor* input = nullptr;
  TfLiteTensor* output = nullptr;

  constexpr int kTensorArenaSize = 37000;
  uint8_t tensor_arena[kTensorArenaSize];
  
  std::vector<std::vector<float>> curMfcc;
  //int x_pointer = 0; // Pointer to the current audio input data
  //float x[640] = {0}; // Audio input data

  // Carries the current input data for mfcc
  std::vector<float> dummyData;

}  // namespace

// Global variables, accessed by the main task.
bool setupError = false;

// The name of this function is important for Arduino compatibility.
void setup() {
  tflite::InitializeTarget();

  // Map the model into a usable data structure. This doesn't involve any
  // copying or parsing, it's a very lightweight operation.
  model = tflite::GetModel(g_pipeline_float_model_data);
  if (model->version() != TFLITE_SCHEMA_VERSION) {
    printf("Model provided is schema version %d not equal to supported version %d.\n", model->version(), TFLITE_SCHEMA_VERSION);
    setupError = true;
    return;
  }


  // This pulls in all the operation implementations we need.
  // NOLINTNEXTLINE(runtime-global-variables)

  static tflite::MicroMutableOpResolver<7> resolver;

  TfLiteStatus resolve_status;
  resolve_status = resolver.AddConv2D();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add Conv2D\n");
      setupError = true;
      return;
  }

  resolve_status = resolver.AddFullyConnected();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add FullyConnected\n");
      setupError = true;
      return;
  }

  resolve_status = resolver.AddMaxPool2D();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add MaxPool2D\n");
      setupError = true;
      return;
  }

  resolve_status = resolver.AddSoftmax();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add Softmax\n");
      setupError = true;
      return;
  }

  resolve_status = resolver.AddReshape();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add Reshape\n");
      setupError = true;
      return;
  }

  resolve_status = resolver.AddMul();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add Mul\n");
      setupError = true;
      return;
  }

  resolve_status = resolver.AddAdd();
  if (resolve_status != kTfLiteOk) {
      printf("Op resolver failed to add Add\n");
      setupError = true;
      return;
  }

  // Build an interpreter to run the model with.
  static tflite::MicroInterpreter static_interpreter(
      model, resolver, tensor_arena, kTensorArenaSize);
  interpreter = &static_interpreter;

  // Allocate memory from the tensor_arena for the model's tensors.
  TfLiteStatus allocate_status = interpreter->AllocateTensors();
  if (allocate_status != kTfLiteOk) {
    printf("AllocateTensors() failed\n");
    setupError = true;
    return;
  }

  // Obtain pointers to the model's input and output tensors.
  input = interpreter->input(0);
  output = interpreter->output(0);


  // Print out shape of input tensor
  printf("Input tensor shape: %d, %d, %d, %d\n", input->dims->data[0], input->dims->data[1], input->dims->data[2], input->dims->data[3]);

  // Print out shape of output tensor
  printf("Output tensor shape: %d, %d\n", output->dims->data[0], output->dims->data[1]);

  // Reserve size of dummyData to stop over allocation
  dummyData.reserve(4000);

  curMfcc.resize(16, std::vector<float>(8, 0.0f)); // Resize to 16 rows, each with 8 columns initialized to 0.0f
  curMfcc.reserve(16); // Reserve space for 16 rows
  for (int i = 0; i < 16; i++) {
    curMfcc.push_back(std::vector<float>(8, 0.0f)); // Add a row with 8 columns initialized to 0.0f
}
}

// The name of this function is important for Arduino compatibility.
void loop() {


  //printf("Entering loop\n"); // Debugging statement

  int frameCount = 0;
  float vals[4000] = {-0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718, 0.120137, 0.123947, 0.0877018, 0.032405, -0.00951385, 0.0269406, 0.0867724, 0.1004, 0.0578965, 0.0181453, -0.0305061, -0.115881, -0.189984, -0.197043, -0.0966252, 0.0917033, 0.230163, 0.241589, 0.177281, 0.0663402, -0.0721856, -0.210319, -0.296135, -0.263271, -0.154521, -0.00380865, 0.153132, 0.22736, 0.199536, 0.122271, 0.0650999, 0.059804, 0.0403781, -0.0567719, -0.192205, -0.273779, -0.257209, -0.19224, -0.0799076, 0.0837629, 0.209636, 0.250415, 0.204517, 0.107616, 0.0117996, -0.0344785, -0.0466564, -0.0895485, -0.13162, -0.0965573, 0.00521722, 0.0692165, 0.0532807, -0.0197606, -0.063204, -0.0562685, -0.00680227, 0.0560573, 0.101728, 0.150745, 0.15238, 0.0506305, -0.088553, -0.149581, -0.103522, -0.0536801, -0.0859758, -0.14161, -0.131158, -0.0620714, -0.0062953, 0.0368769, 0.0762862, 0.119522, 0.114459, 0.0313398, -0.0744716, -0.0968567, -0.0403744, -0.0073467, -0.0351073, -0.0467997, 0.0251173, 0.090977, 0.0960722, 0.0630278, 0.0390907, 0.0318526, 0.0241395, -0.00226169, -0.0571819, -0.138522, -0.168924, -0.0798413, 0.0690792, 0.146449, -0.18731, 0.075694, 0.287786, 0.0961256, 0.0304227, -0.0224325, 0.0384549, -0.00211964, -0.0339344, -0.0412004, -0.0083805, -0.0954724, -0.191918, -0.217509, -0.0992819, 0.0547874, 0.167627, 0.181369, 0.136097, 0.0428441, -0.0552046, -0.0973562, -0.0623361, 0.0380613, 0.0833471, 0.0217946, -0.0772479, -0.149503, -0.167647, -0.108927, -0.0186071, 0.0711718};

  while(frameCount < 10){
    printf("Frame count %d \n", frameCount);

      /*
      * 1. Get the mono audio data from the microphone, listens for 0.25 seconds 
      * 2. Make a mfcc from the data audio input 
      * 3. Classify using the mfcc data
      * 4. Save the classification data
      * 5. Take the average of all classifications
      * 6. The most classified will be chosen as the final classification
      * 7. Plus the counter of classified class  
      */


      /*
        * CODE TO HANDLE THE LISTENING,
        * will print out the data which is passed into the mfcc function
      */

      
    printf("Dummy data size %zu \n", dummyData.size());


    for(int i = 0; i < 4000; i++){
      dummyData.push_back(vals[i]);
    }
    printf("Dummy data size1 %zu \n", dummyData.size());


    std::vector<std::vector<float>> curMfcc = makeMfcc(dummyData, SAMPLE_RATE, NUM_MFCC, NUM_MEL_BANDS);
    //std::vector<std::vector<float>> curMfcc = librosa::Feature::mfcc(dummyData, SAMPLE_RATE, 1024, 512, "hann", true, "reflect", 2.f, NUM_MEL_BANDS, 20, 20000, NUM_MFCC, true, 2);
    
    std::vector<float>().swap(dummyData);

    printf("Dummy data size2 %zu \n", dummyData.size());


    size_t rows = curMfcc.size();
    size_t cols = rows > 0 ? curMfcc[0].size() : 0; // Check if rows exist to avoid accessing an empty vector
    size_t memoryUsage = rows * cols * sizeof(float);

    printf("curMfcc memory usage 2: %zu bytes\n", memoryUsage);
        

      //printf("x_pointer: %d\n", x_pointer);
      // Read float from serial port
      /*float value;
      if (fread(&value, sizeof(float), 1, stdin) == 1) {  // Read float from serial
          //printf("You entered: %f\n", value);
          x[x_pointer] = value;
          x_pointer += 1;
      } else {
          //printf("Invalid input. Try again.\n");
          // Clear the buffer
          while (getchar() != '\n');
          return;
      }
      //printf("x_pointer: %d\n", x_pointer);

      if (x_pointer < 640) {
        return;
      }
      x_pointer = 0;*/

      // Reshape x_quantized to match the input tensor shape (1, 16, 8, 1)
      float mfcc_quantized[1][16][8][1];  // 4D array
      // Checking correct size

      printf("Size of matrix %zu \n", curMfcc.size());
      printf("Size of array in matrix %zu \n", curMfcc[0].size());

      
      // Copy values correctly using row-column indexing
      for (int i = 0; i < 16; i++) {
          for (int j = 0; j < 8; j++) {
              mfcc_quantized[0][i][j][0] = curMfcc[i][j];
          }
      }
      printf("Matrix size1 %zu \n", curMfcc.size());

      // Freeing memory
      std::vector<std::vector<float>>().swap(curMfcc);

      printf("Matrix size2 %zu \n", curMfcc.size());


      // Copy the audio input data to the input tensor
      memcpy(input->data.f, mfcc_quantized, sizeof(mfcc_quantized));



      // Run inference, and report any error
      TfLiteStatus invoke_status = interpreter->Invoke();
      if (invoke_status != kTfLiteOk) {
        printf("Invoke failed\n");
        return;
      }

      // Ensure output tensor is valid
      TfLiteTensor* output = interpreter->output(0);
      if (output == nullptr) {
        printf("Failed to get output tensor\n");
        return;
      }

      // Output is an array, find the index of the largest value
      // Might be redudant if softmax is working
      int output_size = output->dims->data[1]; // Assuming 1D output array
      int max_index = 0;
      float max_value = output->data.f[0];
      for (int i = 1; i < output_size; i++) {
        if (output->data.f[i] > max_value) {
          max_value = output->data.f[i];
          max_index = i;
        }
      }
      //printf("Classification: %s\n", classes[max_index]);
      printf("Classification %d\n", max_index);
      frameCount++;

    }

    frameCount = 0;
}

